version: "3.8"

services:
  postgres:
    image: postgres
    volumes:
      # See "Where to Store Data" in https://hub.docker.com/_/postgres
      - data-db:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d # automatically runs schema.sql ðŸŽ‰
    env_file:
      - .secrets-example
      - .secrets
    networks:
      - reverse-proxy-network

  gunicorn:
    build:
      dockerfile: ./Dockerfile
      context: .
    depends_on:
      - postgres
    command: ${CMD:-dev.sh}
    volumes:
      - ./:/app/src
    env_file:
      - .secrets-example
      - .secrets
    networks:
      - reverse-proxy-network

  nginx:
    image: nginx:1.23.4-alpine
    container_name: tinybasilempire-nginx-container
    ports:
      - ${TINY_HTTP_PORT:-8080}:${TINY_HTTP_PORT:-8080}
      - ${TINY_HTTPS_PORT:-8443}:${TINY_HTTPS_PORT:-8443}
    depends_on:
      - gunicorn
    volumes:
      - ./services/nginx/conf.d:/etc/nginx/conf.d
      - ./services/nginx/certs/dhparam:/etc/ssl/certs
      - web-root:/var/www/html
      - ./services/nginx/certs:/var/certs
      # - ./services/letsencrypt:/etc/letsencrypt
      # - certbot-etc:/etc/letsencrypt
      # - certbot-var:/var/lib/letsencrypt
    networks:
      - reverse-proxy-network
  # certbot:
  #   image: certbot/certbot
  #   volumes:
  #     - certbot-etc:/etc/letsencrypt
  #     - certbot-var:/var/lib/letsencrypt
  #     - web-root:/var/www/html
  #   depends_on:
  #     - nginx
  # command: certonly --webroot --webroot-path=/var/www/html --email sheri@designsimply.com --agree-tos --no-eff-email --staging -d tinybasilempire.com -d www.tinybasilempire.com
  # command: certonly --webroot --webroot-path=/var/www/html --email sheri@designsimply.com --agree-tos --no-eff-email --force-renewal -d tinybasilempire.com -d www.tinybasilempire.com

volumes:
  # certbot-etc:
  # certbot-var:
  data-db:
  web-root:


networks:
  reverse-proxy-network:
    external: true
